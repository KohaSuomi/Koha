
<yazgfs>
<!-- [scheme:]host[:port][/databaseName] -->
<!-- scheme: tcp, ssl, unix, http, sru -->
<!-- can run all servers on tcp, but the unix socket is faster -->

<listen id="biblioserver" >unix:__ZEBRA_RUN_DIR__/bibliosocket</listen>
<listen id="authorityserver" >unix:__ZEBRA_RUN_DIR__/authoritysocket</listen>

<!-- Uncomment the following entry if you want to run the public Z39.50 server.
    Also uncomment the <server> and <serverinfo> sections for id 'publicserver' 
    under PUBLICSERVER'S BIBLIOGRAPHIC RECORDS title-->
<listen id="publicserver" >tcp:@:__ZEBRA_SRU_BIBLIOS_PORT__</listen>

<!-- Settings for special biblio server instance for PazPar2.
     Because PazPar2 only connects to a Z39.50 server using TCP/IP,
     it cannot use the Unix-domain socket that biblioserver uses.
     Therefore, a custom server is defined. -->
__PAZPAR2_TOGGLE_XML_PRE__
<listen id="mergeserver">tcp:@:__MERGE_SERVER_PORT__</listen>
<server id="mergeserver"  listenref="mergeserver"> 
    <directory>__ZEBRA_DATA_DIR__/biblios</directory>
    <config>__ZEBRA_CONF_DIR__/__ZEBRA_BIB_CFG__</config>
    <cql2rpn>__ZEBRA_CONF_DIR__/pqf.properties</cql2rpn>
</server>
__PAZPAR2_TOGGLE_XML_POST__

<!-- BIBLIOGRAPHIC RECORDS -->
<server id="biblioserver"  listenref="biblioserver"> 
    <directory>__ZEBRA_DATA_DIR__/biblios</directory>
    <config>__ZEBRA_CONF_DIR__/__ZEBRA_BIB_CFG__</config>
    <cql2rpn>__ZEBRA_CONF_DIR__/pqf.properties</cql2rpn>
    <xi:include href="__KOHA_CONF_DIR__/zebradb/__BIB_RETRIEVAL_CFG__" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <xi:include href="__KOHA_CONF_DIR__/zebradb/explain-biblios.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
</server>
<serverinfo id="biblioserver">
        <ccl2rpn>__ZEBRA_CONF_DIR__/ccl.properties</ccl2rpn>
        <user>__ZEBRA_USER__</user>    
        <password>__ZEBRA_PASS__</password>
</serverinfo>

<!-- AUTHORITY RECORDS -->
<server id="authorityserver"  listenref="authorityserver" >
    <directory>__ZEBRA_DATA_DIR__/authorities</directory>
    <config>__ZEBRA_CONF_DIR__/__ZEBRA_AUTH_CFG__</config>
    <cql2rpn>__ZEBRA_CONF_DIR__/pqf.properties</cql2rpn>
    <xi:include href="__KOHA_CONF_DIR__/zebradb/__AUTH_RETRIEVAL_CFG__" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <xi:include href="__KOHA_CONF_DIR__/zebradb/explain-authorities.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
</server>
<serverinfo id="authorityserver">
    <ccl2rpn>__ZEBRA_CONF_DIR__/ccl.properties</ccl2rpn>
    <user>__ZEBRA_USER__</user>
    <password>__ZEBRA_PASS__</password>
</serverinfo>

<!-- PUBLICSERVER'S BIBLIOGRAPHIC RECORDS -->
<server id="publicserver"  listenref="publicserver"> 
    <directory>__ZEBRA_DATA_DIR__/biblios</directory>
    <config>__ZEBRA_CONF_DIR__/__ZEBRA_BIB_CFG__</config>
    <cql2rpn>__ZEBRA_CONF_DIR__/pqf.properties</cql2rpn>
    <xi:include href="__KOHA_CONF_DIR__/zebradb/__BIB_RETRIEVAL_CFG__" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <xi:include href="__KOHA_CONF_DIR__/zebradb/explain-biblios.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
</server>
<serverinfo id="publicserver">
        <ccl2rpn>__ZEBRA_CONF_DIR__/ccl.properties</ccl2rpn>
        <user>__ZEBRA_USER__</user>    
        <password>__ZEBRA_PASS__</password>
</serverinfo>

<!-- ADDITIONAL KOHA CONFIGURATION DIRECTIVE -->
<!-- db_scheme should follow the DBD driver name --> 
<!-- the DBD drivers supported by Koha are mysql and Pg -->
<!-- port info: mysql:3306 Pg:5432 (5433 on Debian) -->
<config>
 <intranetuserjschecksum></intranetuserjschecksum>
 <opacuserjschecksum></opacuserjschecksum>
 <finnaprefix>__FINNA_PREFIX__</finnaprefix>
 <webkakecon>__WEBKAKECON__</webkakecon>
 <db_scheme>__DB_TYPE__</db_scheme>
 <database>__DB_NAME__</database>
 <hostname>__DB_HOST__</hostname>
 <port>__DB_PORT__</port>
 <socket>__DB_SOCKET__</socket> <!-- Set this for custom unix socket connection. In PostgreSQL this is the directory where the socket should be in, not the socket file, like with MariaDB/MySQL -->
 <user>__DB_USER__</user>
 <pass>__DB_PASS__</pass>
 <tls>__DB_USE_TLS__</tls>
 <ca>__DB_TLS_CA_CERTIFICATE__</ca>
 <cert>__DB_TLS_CLIENT_CERTIFICATE__</cert>
 <key>__DB_TLS_CLIENT_KEY__</key>
 <biblioserver>biblios</biblioserver>
 <biblioservershadow>1</biblioservershadow>
 <authorityserver>authorities</authorityserver>
 <authorityservershadow>1</authorityservershadow>
 <pluginsdir>__PLUGINS_DIR__</pluginsdir>
 <enable_plugins>0</enable_plugins>
 <upload_path></upload_path>
 <intranetdir>__INTRANET_CGI_DIR__</intranetdir>
 <opacdir>__OPAC_CGI_DIR__/opac</opacdir>
 <opachtdocs>__OPAC_TMPL_DIR__</opachtdocs>
 <intrahtdocs>__INTRANET_TMPL_DIR__</intrahtdocs>
 <includes>__INTRANET_TMPL_DIR__/prog/en/includes/</includes>
 <logdir>__LOG_DIR__</logdir>
 <docdir>__DOC_DIR__</docdir>
 <backupdir>__BACKUP_DIR__</backupdir>
 <!-- Enable the two following to allow superlibrarians to download
      database and configuration dumps (respectively) from the Export
      tool -->
 <backup_db_via_tools>0</backup_db_via_tools>
 <backup_conf_via_tools>0</backup_conf_via_tools>
 <!-- Uncomment the following line if you are not using packages and need to schedule reports through the web interface. supportdir should contain cronjobs/runreport.pl -->
 <!--
 <supportdir>__SCRIPT_NONDEV_DIR__</supportdir>
 -->
 <pazpar2url>http://__PAZPAR2_HOST__:__PAZPAR2_PORT__/search.pz2</pazpar2url>
 <install_log>__MISC_DIR__/koha-install-log</install_log>
 <useldapserver>0</useldapserver><!-- see C4::Auth_with_ldap for extra configs you must add if you want to turn this on -->
 <useshibboleth>0</useshibboleth><!-- see C4::Auth_with_shibboleth for extra configs you must do to turn this on -->
 <zebra_bib_index_mode>__BIB_INDEX_MODE__</zebra_bib_index_mode>
 <zebra_auth_index_mode>__AUTH_INDEX_MODE__</zebra_auth_index_mode>
 <zebra_lockdir>__ZEBRA_LOCK_DIR__</zebra_lockdir>
 <use_zebra_facets>1</use_zebra_facets>
 <queryparser_config>__KOHA_CONF_DIR__/searchengine/queryparser.yaml</queryparser_config>
 <log4perl_conf>__KOHA_CONF_DIR__/log4perl.conf</log4perl_conf>
 <memcached_servers>__MEMCACHED_SERVERS__</memcached_servers>
 <memcached_namespace>__MEMCACHED_NAMESPACE__</memcached_namespace>
 <!-- Uncomment the following line if you want to use template caching
      That will bring a performance boost
      <template_cache_dir>/tmp</template_cache_dir>
 -->

 <!-- Trusted proxies/load balancers, separated by a space or a comma. Used for
      accessing client's real IP via $ENV{REMOTE_ADDR}.
 -->
 <trusted_proxy></trusted_proxy>

 <!-- Secret passphrase used by Mojolicious for signed cookies -->
 <api_secret_passphrase>CHANGEME</api_secret_passphrase>

 <!-- true type font mapping accoding to type from $font_types in C4/Creators/Lib.pm -->
 <ttf>
    <font type="TR" >__FONT_DIR__/DejaVuSerif.ttf</font>
    <font type="TB" >__FONT_DIR__/DejaVuSerif-Bold.ttf</font>
    <font type="TI" >__FONT_DIR__/DejaVuSerif-Italic.ttf</font>
    <font type="TBI">__FONT_DIR__/DejaVuSerif-BoldItalic.ttf</font>
    <font type="C"  >__FONT_DIR__/DejaVuSansMono.ttf</font>
    <font type="CB" >__FONT_DIR__/DejaVuSansMono-Bold.ttf</font>
    <font type="CO" >__FONT_DIR__/DejaVuSansMono-Oblique.ttf</font>
    <font type="CBO">__FONT_DIR__/DejaVuSansMono-BoldOblique.ttf</font>
    <font type="H"  >__FONT_DIR__/DejaVuSans.ttf</font>
    <font type="HO" >__FONT_DIR__/DejaVuSans-Oblique.ttf</font>
    <font type="HB" >__FONT_DIR__/DejaVuSans-Bold.ttf</font>
    <font type="HBO">__FONT_DIR__/DejaVuSans-BoldOblique.ttf</font>
 </ttf>

 <!-- Path to the config file for SMS::Send -->
 <sms_send_config>__KOHA_CONF_DIR__/sms_send/</sms_send_config>

 <!-- Configuration for Plack -->
 <plack_max_requests>50</plack_max_requests>
 <plack_workers>2</plack_workers>

 <!-- Elasticsearch Configuration -->
 <elasticsearch>
     <server>__ELASTICSEARCH_SERVERS__</server>      <!-- may be repeated to include all servers on your cluster -->
     <index_name>__ELASTICSEARCH_INDEX__</index_name>  <!-- should be unique amongst all the indices on your cluster. _biblios and _authorities will be appended. -->
 </elasticsearch>
 <!-- Elasticsearch default index settings config file -->
 <elasticsearch_index_config>__ELASTICSEARCH_INDEX_CONFIG__</elasticsearch_index_config>
 <!-- Elasticsearch default field settings config file -->
 <elasticsearch_field_config>__ELASTICSEARCH_FIELD_CONFIG__</elasticsearch_field_config>
 <!-- Elasticsearch index mapping settings config file.
      Note that any changes made to the mappings file only take effect if you reset the mappings in
      by visiting /cgi-bin/koha/admin/searchengine/elasticsearch/mappings.pl?op=reset&i_know_what_i_am_doing=1&reset_fields=1.
      Resetting mappings will override any changes made in the Search engine configuration UI.
 -->
 <elasticsearch_index_mappings>__ELASTICSEARCH_INDEX_MAPPINGS__</elasticsearch_index_mappings>

 <!-- PageObject tests connect to these servers -->
 <testservers>
    <opac>
        <base_url>http://__WEBSERVER_IP__:__WEBSERVER_PORT__</base_url>
    </opac>
    <staff>
        <base_url>http://__WEBSERVER_IP__:__WEBSERVER_PORT_LIBRARIAN__</base_url>
    </staff>
    <rest>
        <base_url>http://__WEBSERVER_IP__:__WEBSERVER_PORT_LIBRARIAN__</base_url>
    </rest>
 </testservers>
 <pos>
    <CPU>
        <!-- Default payment server configuration -->
        <!-- Delivered by CPU: -->
        <source></source>                           <!-- Source id -->
        <secretKey></secretKey>                     <!-- Secret key for generating SHA-256 hash -->
        <url></url>                                 <!-- Address to the cash register server -->
        <!-- SSL certificates -->
        <ssl_cert></ssl_cert>                       <!-- SSL certificate path -->
        <ssl_key></ssl_key>                         <!-- SSL key path -->
        <ssl_ca_file></ssl_ca_file>                 <!-- CA certificate path -->

        <!-- Per branch payment server configuration -->
        <branchcode>
            <!--
                Example:

                <CPL>
                    <source></source>
                    <secretKey></secretKey>
                    <url></url>
                    <ssl_cert></ssl_cert>
                    <ssl_key></ssl_key>
                    <ssl_ca_file></ssl_ca_file>
                </CPL>
                <MPL>
                    ...
                </MPL>
            -->
        </branchcode>

        <!-- Koha settings -->
        <mode></mode>                               <!-- Use 2 for synchronized mode -->
        <notificationAddress></notificationAddress> <!-- https://server/api/v1/payments/pos/cpu/{invoicenumber}/report -->
        <!-- Replace "server" with your server address, but keep {invoicenumber} as it is (it will be converted later into real id) -->
        <!-- Use "borrower" for borrower information. Any other value will default to transaction id -->
        <receiptDescription>id</receiptDescription>
    </CPU>
 </pos>
 <online_payments>
    <CPU>
        <!-- Delivered by CPU: -->
        <source></source>                           <!-- Source id -->
        <secretKey></secretKey>                     <!-- Secret key for generating SHA-256 hash -->
        <url></url>                                 <!-- Address to the online payments server -->

        <mode></mode>                               <!-- Use 3 for online payments -->

        <!-- Replace "server" with your server address, but keep {invoicenumber} as it is (it will be converted later into real id) -->
        <notificationAddress></notificationAddress> <!-- https://server/api/v1/payments/online/cpu/{invoicenumber}/report -->
        <returnAddress></returnAddress> <!-- Where to redirect user from CPU online shop after the payment is complete?
                                            e.g. https://server/cgi-bin/koha/opac-paycollect.pl -->
    </CPU>
 </online_payments>
   <!-- sendOverdueBills module and sap ftp configurations -->
 <sendoverduebills_pathtoxml></sendoverduebills_pathtoxml> <!-- All xml files created by this module goes in this directory -->
 <!-- Path to xml schema including filename -->
 <sendoverduebills_pathtoxsd></sendoverduebills_pathtoxsd>
 <sendoverduebills_xmlwritemode></sendoverduebills_xmlwritemode> <!-- Use value 1 only if you need to read xml manually! Default value is 0 -->
 <sap_ftp_host></sap_ftp_host> <!-- Ftp host ip address -->
 <sap_ftp_port></sap_ftp_port> <!-- Ftp host port -->
 <sap_ftp_timeout></sap_ftp_timeout> <!-- Ftp connection timeout -->
 <sap_ftp_ispassive></sap_ftp_ispassive> <!-- 1 for passive mode, 0 for active mode -->
 <sap_ftp_user></sap_ftp_user> <!-- Ftp username -->
 <sap_ftp_pw></sap_ftp_pw> <!-- Ftp password for username -->
 <sap_use_sftp></sap_use_sftp> <!-- 1 use sftp, 0 use ftp -->
 <billingSetup>
  <basePath></basePath>
  <branch>items.homebranch</branch>
  <replacementPrice>yes</replacementPrice>
  <debarment>no</debarment>
  <intervalYear></intervalYear>
 </billingSetup>


 <!-- Connection to ssn server for billing -->
 <ssnProvider>
    <url></url> <!-- base URL of ssn-service -->
    <interface></interface> <!-- This is either directDB or findSSN (recommended) for Outi billing, always directDB for Billing Manager  -->
    <directDB>    
        <host></host>
        <port></port>
        <user></user>
        <password></password>
    </directDB>
    <findSSN>
        <user></user>
        <password></password>
    </findSSN>
    <addSSN>
        <user></user>
        <password></password>
    </addSSN>
 </ssnProvider>

<!-- Secure patron ssn/data store connection. See https://github.com/kivilahtio/Hetula -->
 <hetula>
   <!-- Use form 'https://hetula.meijan-koha.fi' -->
   <url>__HETULA_URL__</url>
   <!-- Organization must be added beforehand to Hetula using the management scripts or the Swagger UI -->
   <organization>__HETULA_ORGANIZATION__</organization>
 </hetula>

 <!-- Opuscapita iPost configuration -->
 <printmailProviders>
    <opuscapita>
        <combineacrossbranches>yes</combineacrossbranches>
        <targetdir>/home/koha/koha-dev/var/spool/printmail/epl</targetdir>
        <branches>
            <demobranch>
                <!-- See iPost EPL Design Guide for information about headers: http://www.opuscapita.com/media/830049/iPost-EPL-Design-Guide-FI-ENG-12-01-2016.pdf -->
                <header>EPL1nnnnnnnnnnnTT002SD 0</header>
                <contact></contact>
                <layout>
                    <!-- Control the paging -->
                    <contpagecode>EPL80068</contpagecode>
                    <firstpage>42</firstpage>
                    <otherpages>76</otherpages>
                </layout>
            </demobranch>
        </branches>
        <sftp>
            <host></host>
            <user></user>
            <password></password>
        </sftp>
    </opuscapita>
    <opusFTP>
      <ftpHost></ftpHost>
      <ftpUser></ftpUser>
      <ftpPass></ftpPass>
      <contact></contact> <!-- Contact information like: firstname lastname, email, phone -->
      <customerId></customerId> <!-- Opus Capita customer id -->
      <customerPass></customerPass> <!-- Opus Capita customer password -->
    </opusFTP>
    <ropocapital>
      <!-- <dontReallySendAnything>comment this to actually send the letters, now we are just fakin'</dontReallySendAnything> -->
      <letterStagingDirectory>/tmp/ropocapital/</letterStagingDirectory>
      <clientId>JNS190</clientId>
      <!-- <remoteDirectory>Enfo doesnt want us to specify a root-directory</remoteDirectory>-->
      <host>zmartgate.enfo.fi</host>
      <user>USERNAME</user>
      <passwd>PASSWORD</passwd>
      <sftp>1</sftp>
    </ropocapital>
 </printmailProviders>
 <ksmessaging>
  <letters>
    <combineacrossbranches>no</combineacrossbranches> <!-- not implemented yet -->
    <branches>
      <!-- You can either define individual configurations for known branches here or use the settings in 'default' tags -->
      <default>
        <stagingdir>/home/koha/koha-dev/var/spool/pate-staging</stagingdir>
        <contact></contact> <!-- e-mail address to contact in case of errors -->
        <!-- configure either epl or pdf for each branch (or 'default') -->
        <!-- <ipostepl>
          <unicode>no</unicode>
          <header>EPL111645560490TT002SD 0</header>
          <code>30041</code>
          <layout>
            EPL55506 takes 42 lines
            <templatecode>EPL55504</templatecode>
            <firstpage>42</firstpage>
            EPL80068 will take 76 lines, EPL8DEFO will take 60 lines
            <contpagecode>EPL8DEFO</contpagecode>
            <otherpages>60</otherpages>
          </layout>
          <stagingdir>/home/koha/koha-dev/var/spool/pate-staging</stagingdir>
          <contact></contact> <!- e-mail address to contact in case of errors ->
        </ipostepl> -->
        <ipostpdf>
          <customerid></customerid>
          <customerpass></customerpass>
        </ipostpdf>
        <filetransfer>
          <!-- configure either sftp or ftp file transfer or leave unconfigured for other means of delivering the letters -->
          <!-- port and remotedir are not mandatory, if undefined defaults (21/22 and ~) will be used -->
          <host></host>
          <port></port>
          <remotedir></remotedir>
          <user></user>
          <password></password>
          <protocol></protocol>
        </filetransfer>
      </default>
    </branches>
  </letters>
  <suomifi>
    <branches>
      <default>
        <!-- Configure either 'wsapi' or 'pdf' interface for delivering suomi.fi messages -->
        <!-- <wsapi>
          <viranomainen>
            <sanomaversio>1</sanomaversio>
            <varmennenimi></varmennenimi>
            <viranomaistunnus></viranomaistunnus>
            <palvelutunnus></palvelutunnus>
            <kayttajatunnus></kayttajatunnus>
            <yhteyshenkilo>
              <nimi></nimi>
              <email></email>
              <puhelin></puhelin>
            </yhteyshenkilo>
            <osoite>
              <nimi></nimi>
              <lahiosoite></lahiosoite>
              <postinumero></postinumero>
              <postitoimipaikka></postitoimipaikka>
              <maa>FI</maa>
            </osoite>
          </viranomainen>
          <tulostus>
            <toimittaja>Edita</toimittaja>
          </tulostus>
          <sign>
            <trust>/home/koha/koha-dev/etc/suomificerts/trust.jks</trust>
            <key>/home/koha/koha-dev/etc/suomificerts/id.jks</key>
          </sign>
        </wsapi> -->
        <ipostpdf>
          <customerid></customerid> <!-- six digit customerid required by suomifi for print letters, although not actually used atm -->
          <customerpass></customerpass>
          <ovtid></ovtid> <!-- 12 digit OVT-id for organization -->
          <printprovider>Edita</printprovider> <!-- suomi.fi supports Edita and OpusCapita, but because of legal stuff not in use atm -->
          <senderid>koha_sftp</senderid>
          <fileprefix>koha</fileprefix> <!-- senderid is used if this is not set -->
        </ipostpdf>
        <!-- stagingdir, contact and filetransfer-part are only needed for pdf-interface, wsapi does not use them
             it's safe to comment them out (or remove altogether) if you use wsapi only. -->
        <stagingdir>/home/koha/koha-dev/var/spool/pate-staging</stagingdir>
        <contact></contact> <!-- e-mail address to contact in case of errors -->
        <filetransfer>
          <!-- configure sftp file transfer or leave unconfigured to use wsapi -->
          <!-- port and remotedir are not mandatory, if undefined defaults (22 and ~) will be used -->
          <host></host>
          <port></port>
          <remotedir></remotedir>
          <user></user>
          <password></password>
          <protocol>sftp</protocol>
        </filetransfer>
      </default>
    </branches>
  </suomifi>
 </ksmessaging>
 <smsProviders>
    <labyrintti>
        <!-- Login details for SMS Gateway service
        There are 3 options to configure this,
        first one is single branch login. This uses branchcode for defining client
        <branchcode>
            <user></user>
            <passwd></passwd>
        </branchcode>-->
        <!-- Second one is library group login. This uses 3 first chars of branchcode for defining client
        <branchprefix>
            <user></user>
            <passwd></passwd>
        </branchprefix>-->
        <!-- And the third one is shared login for all messages.-->
        <user></user>
        <passwd></passwd>
        <!-- Report URL is the page where your SMS Gateway provider will send a report
             about the delivery of the message. Leave {message_id} as it is; it will
             be replaced by message_id in your driver.
             With REST API, it should be
             http://mydomain.com/api/v1/notices/{message_id}/report/_your_gateway_
                                                                                    -->
        <reportUrl></reportUrl>
        <!-- Use UTF-16. Note: with this encoding, maxlength of sms = 70 chars
            To use UTF-16 when needed: yes
            To disable and use GSM 03.38: leave blank -->
        <Unicode></Unicode>
        <!-- The following IP addresses are allowed to send a request to your
             report endpoint. Separate multiple by whitespace or comma. -->
        <reportUrlAllowedIPs>81.19.118.90 83.145.230.90</reportUrlAllowedIPs>
        <sourceName></sourceName> <!-- Displays as sender name in phones. Maxlength 11 chars -->
        <requestEncoding>UTF-8</requestEncoding> <!-- Character encoding for communicating with Labyrintti server -->
    </labyrintti>
    <arena>
        <!-- Login details for SMS Gateway service -->
        <user></user>
        <passwd></passwd>
        <!-- Send messages with separated billing. Uses 3 first chars of branchcode for defining clientid -->
        <branchcode>
            <clientid></clientid>
        </branchcode>
        <!-- Report URL is the page where your SMS Gateway provider will send a report
             about the delivery of the message. Leave {message_id} as it is; it will
             be replaced by message_id in your driver.
             With REST API, it should be
             http://mydomain.com/api/v1/notices/{message_id}/report/_your_gateway_
                                                                                    -->
        <reportUrl></reportUrl>
        <!-- The following IP addresses are allowed to send a request to your
             report endpoint. Separate multiple by whitespace or comma. -->
        <reportUrlAllowedIPs></reportUrlAllowedIPs>
        <!-- Use UTF-16. Note: with this encoding, maxlength of sms = 70 chars
            To use UTF-16 when needed: yes
            To disable and use GSM 03.38: leave blank -->
        <Unicode></Unicode>
    </arena>
    <sonera>
        <!-- Login details for SMS Gateway service -->
        <user></user>
        <passwd></passwd>
        <url></url>
        <!-- Send messages with separated billing. Uses 3 first chars of branchcode for defining clientid -->
        <branchcode>
            <clientid></clientid>
        </branchcode>
        <sourceName></sourceName> <!-- Displays as sender name in phones. Maxlength 11 chars -->
    </sonera>
 </smsProviders>
</config>
</yazgfs>
