## Koha::Logger && Log::Log4perl logging configuration file
##
## Study first
##  1. Log::Log4perl
##  2. Koha::Logger
## to understand what these configurations do.
##
## Logging in Koha is organized via package-level loggers.
## Each class/package has a
##     our $logger = Koha::Logger->get();
## and it handles the logging needs for that package and dynamically adjusts to find the correct interface-dependent config.
##
## The log4perl logger categories (logger names) are built by first taking the active C4::Context->interface() and the package name,
## eg. if the currently active interface was 'commandline' and the package name with the package-level logger would be 'Koha::Patron'
## The log4perl category for the package-level logger would be 'commandline.Koha.Patron'
## That logger would inherit the behaviour of the closest parent logger, if available, defaulting to the root logger.
## Hence one can set default interface-specific logging behaviour with the root/interface log categories, and overload the logging
## configuration of specific packages of interest to closer scrutinize their behaviour, for example, to track production issues.
##

# This pattern is reused in ConversionPatterns
defaultPattern = [%d] P:%P [%p] %m{chomp} %M%n

# This root logger catches all messages that are not properly configured to use one of the established Koha interfaces.
# This is pretty useful to detect Log::Log4perl misconfigurations.
log4perl.rootLogger=TRACE, ROOT
log4perl.appender.ROOT=Log::Log4perl::Appender::ScreenColoredLevels
log4perl.appender.ROOT.layout=PatternLayout
log4perl.appender.ROOT.layout.ConversionPattern=${defaultPattern}
log4perl.appender.ROOT.utf8=1
# Root logger catches all messages which are allowed to bubble up passing this minimum threshold
# This is useful when plack-daemon STDOUT is put to journalctl, and some plack-services have errors in them,
# so one can see all the errors in the koha-plack-daemon with one glance to the journalctl
log4perl.appender.ROOT.Threshold=ERROR

log4perl.logger.intranet = WARN, INTRANET
log4perl.appender.INTRANET=Log::Log4perl::Appender::File
log4perl.appender.INTRANET.filename=__LOG_DIR__/intranet-error.log
log4perl.appender.INTRANET.mode=append
log4perl.appender.INTRANET.create_at_logtime=true
log4perl.appender.INTRANET.syswrite=true
log4perl.appender.INTRANET.recreate=true
log4perl.appender.INTRANET.layout=PatternLayout
log4perl.appender.INTRANET.layout.ConversionPattern=${defaultPattern}
log4perl.appender.INTRANET.utf8=1
# Allow bubbling to koha-plack-daemon STDOUT/ERR, so we can gather high level errors to the daemon journalctl
log4perl.additivity.intranet=1

log4perl.logger.opac = WARN, OPAC
log4perl.appender.OPAC=Log::Log4perl::Appender::File
log4perl.appender.OPAC.filename=__LOG_DIR__/opac-error.log
log4perl.appender.OPAC.mode=append
log4perl.appender.OPAC.create_at_logtime=true
log4perl.appender.OPAC.syswrite=true
log4perl.appender.OPAC.recreate=true
log4perl.appender.OPAC.layout=PatternLayout
log4perl.appender.OPAC.layout.ConversionPattern=${defaultPattern}
log4perl.appender.OPAC.utf8=1
# Allow bubbling to koha-plack-daemon STDOUT/ERR, so we can gather high level errors to the daemon journalctl
log4perl.additivity.opac=1

log4perl.logger.commandline = WARN, CLI
log4perl.appender.CLI=Log::Log4perl::Appender::ScreenColoredLevels
log4perl.appender.CLI.layout=PatternLayout
log4perl.appender.CLI.layout.ConversionPattern=${defaultPattern}
log4perl.appender.CLI.utf8=1
log4perl.additivity.commandline=0

log4perl.logger.sip = DEBUG, SIP
log4perl.appender.SIP=Log::Log4perl::Appender::File
log4perl.appender.SIP.filename=__LOG_DIR__/sip2.log
log4perl.appender.SIP.mode=append
log4perl.appender.SIP.create_at_logtime=true
log4perl.appender.SIP.syswrite=true
log4perl.appender.SIP.recreate=true
log4perl.appender.SIP.layout=PatternLayout
log4perl.appender.SIP.layout.ConversionPattern=[%d] P:P% [%p] %X{accountid}@%X{peeraddr}: %m{chomp} %M%n
log4perl.appender.SIP.utf8=1
log4perl.additivity.sip=0

log4perl.logger.rest = WARN, REST
log4perl.appender.REST=Log::Log4perl::Appender::File
log4perl.appender.REST.filename=__LOG_DIR__/rest.log
log4perl.appender.REST.create_at_logtime=true
log4perl.appender.REST.syswrite=true
log4perl.appender.REST.recreate=true
log4perl.appender.REST.mode=append
log4perl.appender.REST.layout=PatternLayout
log4perl.appender.REST.layout.ConversionPattern=${defaultPattern}
log4perl.appender.REST.utf8=1
# Allow bubbling to koha-plack-daemon STDOUT/ERR, so we can gather high level errors to the daemon journalctl
log4perl.additivity.rest=1

log4perl.logger.z3950 = WARN, Z3950
log4perl.appender.Z3950=Log::Log4perl::Appender::File
log4perl.appender.Z3950.filename=__LOG_DIR__/z3950-error.log
log4perl.appender.Z3950.create_at_logtime=true
log4perl.appender.Z3950.mode=append
log4perl.appender.Z3950.layout=PatternLayout
log4perl.appender.Z3950.layout.ConversionPattern=${defaultPattern}
log4perl.additivity.z3950=0
