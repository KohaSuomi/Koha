{
  "/patrons": {
    "get": {
      "x-mojo-to": "Patron#list",
      "operationId": "listPatrons",
      "tags": ["patrons"],
      "parameters": [{
        "name": "borrowernumber",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on borrowernumber",
        "required": false,
        "type": "string"
      },
      {
        "name": "cardnumber",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on cardnumber",
        "required": false,
        "type": "string"
      },
      {
        "name": "surname",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on surname",
        "required": false,
        "type": "string"
      },
      {
        "name": "firstname",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on firstname",
        "required": false,
        "type": "string"
      },
      {
        "name": "title",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on title",
        "required": false,
        "type": "string"
      },
      {
        "name": "othernames",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on othernames",
        "required": false,
        "type": "string"
      },
      {
        "name": "initials",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on initials",
        "required": false,
        "type": "string"
      },
      {
        "name": "streetnumber",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on streetnumber",
        "required": false,
        "type": "string"
      },
      {
        "name": "streettype",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on streettype",
        "required": false,
        "type": "string"
      },
      {
        "name": "address",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on address",
        "required": false,
        "type": "string"
      },
      {
        "name": "address2",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on address2",
        "required": false,
        "type": "string"
      },
      {
        "name": "city",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on city",
        "required": false,
        "type": "string"
      },
      {
        "name": "state",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on state",
        "required": false,
        "type": "string"
      },
      {
        "name": "zipcode",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on zipcode",
        "required": false,
        "type": "string"
      },
      {
        "name": "country",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on country",
        "required": false,
        "type": "string"
      },
      {
        "name": "email",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on email",
        "required": false,
        "type": "string"
      },
      {
        "name": "phone",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on phone",
        "required": false,
        "type": "string"
      },
      {
        "name": "mobile",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on mobile",
        "required": false,
        "type": "string"
      },
      {
        "name": "fax",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on fax",
        "required": false,
        "type": "string"
      },
      {
        "name": "emailpro",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on emailpro",
        "required": false,
        "type": "string"
      },
      {
        "name": "phonepro",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on phonepro",
        "required": false,
        "type": "string"
      },
      {
        "name": "B_streetnumber",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on B_streetnumber",
        "required": false,
        "type": "string"
      },
      {
        "name": "B_streettype",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on B_streettype",
        "required": false,
        "type": "string"
      },
      {
        "name": "B_address",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on B_address",
        "required": false,
        "type": "string"
      },
      {
        "name": "B_address2",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on B_address2",
        "required": false,
        "type": "string"
      },
      {
        "name": "B_city",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on B_city",
        "required": false,
        "type": "string"
      },
      {
        "name": "B_state",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on B_state",
        "required": false,
        "type": "string"
      },
      {
        "name": "B_zipcode",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on B_zipcode",
        "required": false,
        "type": "string"
      },
      {
        "name": "B_country",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on B_country",
        "required": false,
        "type": "string"
      },
      {
        "name": "B_email",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on B_email",
        "required": false,
        "type": "string"
      },
      {
        "name": "B_phone",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on B_phone",
        "required": false,
        "type": "string"
      },
      {
        "name": "dateofbirth",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on dateofbirth",
        "required": false,
        "type": "string"
      },
      {
        "name": "branchcode",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on branchcode",
        "required": false,
        "type": "string"
      },
      {
        "name": "categorycode",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on categorycode",
        "required": false,
        "type": "string"
      },
      {
        "name": "dateenrolled",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on dateenrolled",
        "required": false,
        "type": "string"
      },
      {
        "name": "dateexpiry",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on dateexpiry",
        "required": false,
        "type": "string"
      },
      {
        "name": "gonenoaddress",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on gonenoaddress",
        "required": false,
        "type": "string"
      },
      {
        "name": "lost",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on lost",
        "required": false,
        "type": "string"
      },
      {
        "name": "debarred",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on debarred",
        "required": false,
        "type": "string"
      },
      {
        "name": "debarredcomment",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on debarredcomment",
        "required": false,
        "type": "string"
      },
      {
        "name": "contactname",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on contactname",
        "required": false,
        "type": "string"
      },
      {
        "name": "contactfirstname",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on contactfirstname",
        "required": false,
        "type": "string"
      },
      {
        "name": "contacttitle",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on contacttitle",
        "required": false,
        "type": "string"
      },
      {
        "name": "guarantorid",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on guarantorid",
        "required": false,
        "type": "string"
      },
      {
        "name": "borrowernotes",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on borrowernotes",
        "required": false,
        "type": "string"
      },
      {
        "name": "relationship",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on relationship",
        "required": false,
        "type": "string"
      },
      {
        "name": "sex",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on sex",
        "required": false,
        "type": "string"
      },
      {
        "name": "password",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on password",
        "required": false,
        "type": "string"
      },
      {
        "name": "flags",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on flags",
        "required": false,
        "type": "string"
      },
      {
        "name": "userid",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on userid",
        "required": false,
        "type": "string"
      },
      {
        "name": "opacnote",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on opacnote",
        "required": false,
        "type": "string"
      },
      {
        "name": "contactnote",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on contactnote",
        "required": false,
        "type": "string"
      },
      {
        "name": "sort1",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on sort1",
        "required": false,
        "type": "string"
      },
      {
        "name": "sort2",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on sort2",
        "required": false,
        "type": "string"
      },
      {
        "name": "altcontactfirstname",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on altcontactfirstname",
        "required": false,
        "type": "string"
      },
      {
        "name": "altcontactsurname",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on altcontactsurname",
        "required": false,
        "type": "string"
      },
      {
        "name": "altcontactaddress1",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on altcontactaddress1",
        "required": false,
        "type": "string"
      },
      {
        "name": "altcontactaddress2",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on altcontactaddress2",
        "required": false,
        "type": "string"
      },
      {
        "name": "altcontactaddress3",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on altcontactaddress3",
        "required": false,
        "type": "string"
      },
      {
        "name": "altcontactstate",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on altcontactstate",
        "required": false,
        "type": "string"
      },
      {
        "name": "altcontactzipcode",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on altcontactzipcode",
        "required": false,
        "type": "string"
      },
      {
        "name": "altcontactcountry",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on altcontactcountry",
        "required": false,
        "type": "string"
      },
      {
        "name": "altcontactphone",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on altcontactphone",
        "required": false,
        "type": "string"
      },
      {
        "name": "smsalertnumber",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on smsalertnumber",
        "required": false,
        "type": "string"
      },
      {
        "name": "sms_provider_id",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on sms_provider_id",
        "required": false,
        "type": "string"
      },
      {
        "name": "privacy",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on privacy",
        "required": false,
        "type": "string"
      },
      {
        "name": "privacy_guarantor_checkouts",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on privacy_guarantor_checkouts",
        "required": false,
        "type": "string"
      },
      {
        "name": "checkprevcheckout",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on checkprevcheckout",
        "required": false,
        "type": "string"
      },
      {
        "name": "updated_on",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on updated_on",
        "required": false,
        "type": "string"
      },
      {
        "name": "lastseen",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on lastseen",
        "required": false,
        "type": "string"
      },
      {
        "name": "lang",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on lang",
        "required": false,
        "type": "string"
      },
      {
        "name": "login_attempts",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on login_attempts",
        "required": false,
        "type": "string"
      },
      {
        "name": "overdrive_auth_token",
        "in": "query",
        "description": "Case insensetive 'starts_with' search on overdrive_auth_token",
        "required": false,
        "type": "string"
      }],
      "produces": [
          "application/json"
      ],
      "responses": {
        "200": {
          "description": "A list of patrons",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "../definitions.json#/patron"
            }
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "borrowers": "view_borrowers"
        },
        "allow-owner": true,
        "allow-guarantor": true,
        "allow-guarantee": true
      }
    },
    "post": {
      "x-mojo-to": "Patron#add",
      "operationId": "addPatron",
      "tags": ["patrons"],
      "parameters": [{
        "name": "body",
        "in": "body",
        "description": "A JSON object containing information about the new patron",
        "required": true,
        "schema": {
          "$ref": "../definitions.json#/patron"
        }
      }],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "201": {
          "description": "A successfully created patron",
          "schema": {
            "items": {
              "$ref": "../definitions.json#/patron"
            }
          }
        },
        "400": {
          "description": "Bad parameter",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "404": {
          "description": "Resource not found",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "409": {
          "description": "Conflict in creating resource",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal error",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "borrowers": "1"
        }
      }
    }
  },
  "/patrons/{borrowernumber}": {
    "get": {
      "x-mojo-to": "Patron#get",
      "operationId": "getPatron",
      "tags": ["patrons"],
      "parameters": [{
        "$ref": "../parameters.json#/borrowernumberPathParam"
      }],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "A patron",
          "schema": {
            "$ref": "../definitions.json#/patron"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "404": {
          "description": "Patron not found",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "allow-owner": true,
        "allow-guarantor": true,
        "allow-guarantee": true,
        "permissions": {
          "borrowers": "view_borrowers"
        }
      }
    },
    "patch": {
      "x-mojo-to": "Patron#patch",
      "operationId": "patchPatron",
      "tags": ["patrons"],
      "parameters": [
        {
          "$ref": "../parameters.json#/borrowernumberPathParam"
        },
        {
          "name": "body",
          "in": "body",
          "description": "A JSON object containing new information about existing patron",
          "schema": {
            "$ref": "../definitions.json#/patron"
          }
        }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Field(s) updated",
          "schema": {
            "$ref": "../definitions.json#/patron"
          }
        },
        "202": {
          "description": "Accepted and waiting for librarian verification"
        },
        "400": {
          "description": "Bad parameter",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "204": {
          "description": "No Content",
          "schema": {
            "type": "object"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "404": {
          "description": "Resource not found",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "409": {
          "description": "Conflict in updating resource",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal error",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "allow-owner": true,
        "allow-guarantor": true,
        "permissions": {
          "borrowers": "1"
        }
      }
    },
    "put": {
      "x-mojo-to": "Patron#edit",
      "operationId": "editPatron",
      "tags": ["patrons"],
      "parameters": [
        {
          "$ref": "../parameters.json#/borrowernumberPathParam"
        },
        {
          "name": "body",
          "in": "body",
          "description": "A JSON object containing new information about existing patron",
          "required": true,
          "schema": {
            "$ref": "../definitions.json#/patron"
          }
        }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "A successfully updated patron",
          "schema": {
            "items": {
              "$ref": "../definitions.json#/patron"
            }
          }
        },
        "202": {
          "description": "Accepted and waiting for librarian verification",
          "schema": {
            "type": "object"
          }
        },
        "204": {
          "description": "No Content",
          "schema": {
            "type": "object"
          }
        },
        "400": {
          "description": "Bad parameter",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "404": {
          "description": "Resource not found",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "409": {
          "description": "Conflict in updating resource",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal error",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "allow-owner": true,
        "allow-guarantor": true,
        "permissions": {
          "borrowers": "1"
        }
      }
    },
    "delete": {
      "x-mojo-to": "Patron#delete",
      "operationId": "deletePatron",
      "tags": ["patrons"],
      "parameters": [{
        "$ref": "../parameters.json#/borrowernumberPathParam"
      }],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Patron deleted successfully",
          "schema": {
            "type": "object"
          }
        },
        "400": {
          "description": "Patron deletion failed",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "404": {
          "description": "Patron not found",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "borrowers": "1"
        }
      }
    }
  },
  "/patrons/{borrowernumber}/password": {
    "patch": {
      "x-mojo-to": "Patron#api_changepassword",
      "operationId": "changepasswordPatron",
      "tags": ["patrons"],
      "parameters": [{
          "$ref": "../parameters.json#/borrowernumberPathParam"
        }, {
          "name": "body",
          "in": "body",
          "description": "A JSON object containing informations about passwords",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "current_password": {
                "description": "Current password",
                "type": "string"
              },
              "new_password": {
                "description": "New password",
                "type": "string"
              }
            }
          }
        }
      ],
      "produces": [
          "application/json"
      ],
      "responses": {
        "200": {
          "description": "Password changed"
        },
        "400": {
          "description": "Bad request",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "404": {
          "description": "Patron not found",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "allow-owner": true,
        "permissions": {
          "borrowers": "1"
        }
      }
    }
  },
  "/patrons/{borrowernumber}/payment": {
    "post": {
      "x-mojo-to": "Patron#pay",
      "operationId": "payForPatron",
      "tags": ["accountlines"],
      "produces": [
        "application/json"
      ],
      "parameters": [
        { "$ref": "../parameters.json#/borrowernumberPathParam" },
        {
          "name": "body",
          "in": "body",
          "description": "A JSON object containing fields to modify",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "amount": {
                "description": "Amount to pay",
                "type": "number",
                "exclusiveMinimum": true,
                "minimum": 0
              },
              "note": {
                "description": "Payment note",
                "type": ["string", "null"]
              }
            },
            "required": ["amount"]
          }
        }
      ],
      "consumes": ["application/json"],
      "produces": ["application/json"],
      "responses": {
        "204": {
          "description": "Success"
        },
        "400": {
          "description": "Missing or wrong parameters",
          "schema": { "$ref": "../definitions.json#/error" }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "404": {
          "description": "Borrower not found",
          "schema": { "$ref": "../definitions.json#/error" }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        }
      },
      "x-koha-authorization": {
        "permissions": {
          "updatecharges": "1"
        }
      }
    }
  },
  "/patrons/{borrowernumber}/status": {
    "get": {
      "x-mojo-to": "Patron#getstatus",
      "operationId": "getstatusPatron",
      "tags": ["patrons"],
      "parameters": [{
          "$ref": "../parameters.json#/borrowernumberPathParam"
        }
      ],
      "produces": [
          "application/json"
      ],
      "responses": {
        "200": {
          "description": "A patron",
          "schema": {
            "$ref": "../definitions.json#/patronstatus"
          }
        },
        "401": {
          "description": "Authentication required",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "404": {
          "description": "Patron not found",
          "schema": {
           "$ref": "../definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        }
      },
     "x-koha-authorization": {
        "allow-owner": true,
       "allow-guarantor": true,
        "permissions": {
          "borrowers": "1"
        }
      }
    }
  },
  "/patrons/password/recovery": {
    "post": {
      "x-mojo-to": "Patron::Password#recovery",
      "operationId": "addPasswordRecoveryRequest",
      "description": "Creates a new password recovery request.",
      "tags": ["password"],
      "parameters": [{
        "name": "body",
        "in": "body",
        "description": "A JSON object containing fields for recovery request",
        "required": true,
        "schema": {
          "type": "object",
          "properties": {
            "userid": {
              "description": "Patron's userid (this field or cardnumber required)",
              "type": "string"
            },
            "cardnumber": {
              "description": "Patron's cardnumber (this field or userid required)",
              "type": "string"
            },
            "email": {
              "description": "Patron's email (required)",
              "type": "string"
            },
            "complete_url": {
              "description": "The location where patron will complete their password recovery. This location will be added into the password recovery email. To avoid malicious use, whitelist certain hosts in OpacResetPasswordHostWhitelist system preference and forbid all other custom links. Use {uuid} for adding the password recovery uuid into your custom link. It will be replaced by the actual uuid in the email.",
              "type": "string"
            },
            "skip_email": {
              "description": "If true, Koha will not enqueue password recovery email. Makes this endpoint return the letter, uuid and patron email. Requires permission borrowers.get_password_recovery_uuid. Useful for third party service integrations that wish to handle emailing instead of Koha.",
              "type": "boolean"
            }
          },
          "required": ["email"]
        }
      }],
      "produces": ["application/json"],
      "responses": {
        "201": {
          "description": "Password recovery request created",
          "schema": { "$ref": "../definitions.json#/passwordRecovery" }
        },
        "400": {
          "description": "Bad parameter(s)",
          "schema": { "$ref": "../definitions.json#/error" }
        },
        "401": {
          "description": "Authentication required",
          "schema": { "$ref": "../definitions.json#/error" }
        },
        "403": {
          "description": "Password recovery disabled, no access to this endpoint",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "404": {
          "description": "One or more of the given parameters not found",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        }
      }
    }
  },
  "/patrons/password/recovery/complete": {
    "post": {
      "x-mojo-to": "Patron::Password#complete_recovery",
      "operationId": "completePasswordRecoveryRequest",
      "description": "Completes a password recovery request.",
      "tags": ["password"],
      "parameters": [{
        "name": "body",
        "in": "body",
        "description": "A JSON object containing fields for completing recovery request",
        "required": true,
        "schema": {
          "type": "object",
          "properties": {
            "uuid": {
              "description": "Uuid generated in /patrons/password/recovery",
              "type": "string"
            },
            "new_password": {
              "description": "Patron's new password",
              "type": "string"
            },
            "confirm_new_password": {
              "description": "Confirm patron's new password",
              "type": "string"
            }
          },
          "required": ["uuid", "new_password", "confirm_new_password"]
        }
      }],
      "produces": ["application/json"],
      "responses": {
        "200": {
          "description": "Password recovery completed",
          "schema": { "type": "object" }
        },
        "400": {
          "description": "Bad parameter(s)",
          "schema": { "$ref": "../definitions.json#/error" }
        },
        "404": {
          "description": "Uuid not found",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal server error",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        }
      }
    }
  },
  "/patrons/alldata": {
    "get": {
      "x-mojo-to": "Patron#getalldata",
      "operationId": "getAlldata",
      "tags": ["patrons"],
      "produces": [
        "application/json"
      ],
      "parameters": [{
        "name": "borrowernumber",
        "in": "query",
        "description": "borrowernumber",
        "required": true,
        "type": "string"
      },
      {
        "name": "section",
        "in": "query",
        "description": "Get data by sections",
        "required": false,
        "type": "string",
        "enum": ["personal", "checkouts", "holds", "accountlines", "notices", "messages", "debarments", "suggestions", "ill"]
      }],
      "x-koha-authorization": {
        "allow-owner": true,
          "permissions": {
            "borrowers": "view_borrowers"
          }
      },
      "responses": {
        "200": {
          "description": "Getting all data succeeded",
          "schema": {
            "type": "object"
          }
        },
        "400": {
          "description": "Bad parameter(s)",
          "schema": { "$ref": "../definitions.json#/error" }
        },
        "404": {
          "description": "Missing all data",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "403": {
          "description": "Access forbidden",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "500": {
          "description": "Internal error",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        },
        "503": {
          "description": "Under maintenance",
          "schema": {
            "$ref": "../definitions.json#/error"
          }
        }
      }
    }
  }
}
